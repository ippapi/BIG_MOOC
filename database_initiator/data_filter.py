from cassandra.cluster import Cluster
from cassandra.query import BatchStatement
from cassandra.auth import PlainTextAuthProvider
import json
import csv

# This secure connect bundle is autogenerated when you download your SCB, 
# if yours is different update the file name below
cloud_config= {
  'secure_connect_bundle': './secret/secure-connect-moocassandra.zip'
}

# This token JSON file is autogenerated when you download your token, 
# if yours is different update the file name below
with open("./secret/MOOCASSANDRA-token.json") as f:
    secrets = json.load(f)

CLIENT_ID = secrets["clientId"]
CLIENT_SECRET = secrets["secret"]

auth_provider = PlainTextAuthProvider(CLIENT_ID, CLIENT_SECRET)
cluster = Cluster(cloud=cloud_config, auth_provider=auth_provider)
session = cluster.connect()
session.set_keyspace('BIG_MOOC')

def init_schema():
    session.execute("""
        CREATE TABLE IF NOT EXISTS trained_courses (
            course_id TEXT PRIMARY KEY,
        );
    """)
    print("Keyspace and tables dropped and recreated.")

def load_trained_courses():
    batch_size = 50
    batch = BatchStatement()
    count = 0

    with open('./data/course_map.csv') as f:
        reader = csv.DictReader(f)
        for row in reader:
            batch.add("""
                INSERT INTO trained_courses (course_id)
                VALUES (%s)
            """, (row["course_id"],))

            count += 1

            if count % batch_size == 0:
                session.execute(batch)
                batch = BatchStatement()

    if len(batch) > 0:
        session.execute(batch)

init_schema()
load_trained_courses()
